rtvs::debug_source("C:/Users/Lubomír Rýgl/Desktop/Mentors/R/001_Základy.R")
cls
clear
myString <- "Hello World!"
print(myString)
Ovoce <- c("Pomeranč","Jablko","Meloun","Hruška","Liči","Banán")
c
Ovoce
Print(Ovoce)
print(Ovoce)
class("Lorem ipsum")
TRUE
class(TRUE)
class(13,5)
class(13.5)
class(2L)
class(2+5i)
class("Text")
class(charToRaw("Text"))
SeznamPolozek <- list(c(2,3,5,3,7,9),25.99,"Poznámka")
SeznamPolozek
SeznamPolozek <- list(c(2,3,5,3,7,9),25.99,c("Poznámka_1","Poznámka_2"))
SeznamPolozek
Matice <- matrix(c("a", "b", "c", "d", "a"), nrow = 2, ncol = 3, byrow = TRUE)
Matice <- matrix(c("a", "b", "c", "d", "a","c"), nrow = 2, ncol = 3, byrow = TRUE)
Matice
Pole <- array(c("a", "v", "d"), dim = c(3, 2, 5))
Pole
Pole <- array(c("a", "v", "d"), dim = c(3))
Pole
Pole <- array(c("a", "v", "d"), dim = c(3,2,3))
Pole
Ovoce <- c("Pomeranč", "Jablko", "Meloun", "Hruška", "Liči", "Banán", "Jablko", "Jablko", "Pomeranč")
Faktor_Ovoce <- factor(Ovoce)
Faktor_Ovoce
nlevels(Faktor_Ovoce)
                 )
BMI <- data.frame(                       pohlaví = c("Muž","Žena","Muž","Žena","Muž","Muž"),                       výška = c(189, 171, 181, 180, 168, 195, 176),                       Váha = c(98,55,87,48,120,95),                       Věk = c(26,20,24,18,35,58)                  )
BMI <- data.frame(                       pohlaví = c("Muž","Žena","Muž","Žena","Muž","Muž"),                       výška = c(189, 171, 181, 180, 168, 195),                       Váha = c(98,55,87,48,120,95),                       Věk = c(26,20,24,18,35,58)                  )
BMI
12 + 13
class("Lorem ipsum")
12+5
rtvs::debug_source("C:/Users/Lubomír Rýgl/Desktop/Mentors/R/001_Základy.R")
15/3.5
12*59
12-23
2^2
12%6
12%%6
class(2L)
class(2+5i)
print(getwd())
      )
print(setwd())
getwd()
setwd(getwd()"/Data")
"text " + "text"
setwd(paste(getwd(),"/Data",sep = "/") getwd
getwd()
print(setwd(paste(getwd(), "/Data", sep = "/")))
print(setwd(paste(getwd(), "/Data", sep = " ")))
DataZamestnanci <- read.csv(Employee_Data.csv)
DataZamestnanci <- read.csv("Data/Employee_Data.csv")
getwd()
DataZamestnanci <- read.csv("Employee_Data.csv")
getwd()
setwd("C:/Users/Lubomír Rýgl/Desktop/Mentors/R")
getwd()
DataZamestnanci <- read.csv("Employee_Data.csv")
DataZamestnanci <- read.csv("Data/Employee_Data.csv")
table(DataZamestnanci)
print(DataZamestnanci)
DataZamestnanci <- read.csv("Data/Employee_Data.csv")
print(DataZamestnanci)
is.data.frame(DataZamestnanci)
NROW(DataZamestnanci)
ncol(DataZamestnanci)
MaxVyplata <- max(DataZamestnanci$salary)
MaxVyplata
ZamMaxVyplata <- subset(DataZamestnanci, MaxVyplata == max(salary))
ZamMaxVyplata
ZamMaxVyplata <- subset(DataZamestnanci, MaxVyplata == max(DataZamestnanci$salary))
ZamMaxVyplata
ZamMaxVyplata <- subset(DataZamestnanci, salary == max(salary))
ZamMaxVyplata
ZamOddeleni <- subset(DataZamestnanci, DataZamestnanci$dept == "IT")
ZamOddeleni
help
help(max)
MaxVyplata <- max(salary)
info <- subset(DataZamestnanci, DataZamestnanci$salary > 600 & DataZamestnanci$dept == "IT")
info
retDate <- subset(DataZamestnanci, as.Date(DataZamestnanci$start_date) > as.Date("2014-01-01"))
retDate
write.csv(retDate,"Output.csv")
write.csv(retDate,"Data/Output.csv")
install.packages("xlsx")
library("xlsx", lib.loc="C:/Users/Lubomír Rýgl/Documents/R/win-library/3.3")
library("xlsx", lib.loc="C:/Users/Lubomír Rýgl/Documents/R/win-library/3.3")
library("xlsxjars", lib.loc="C:/Users/Lubomír Rýgl/Documents/R/win-library/3.3")
library("xlsx")
install.packages("rJava")
library("xlsx")
install.packages("openxlsx", lib="C:/Users/Lubomír Rýgl/Documents/R/win-library/3.3")
library("openxlsx", lib.loc="C:/Users/Lubomír Rýgl/Documents/R/win-library/3.3")
library("xlsx", lib.loc="C:/Users/Lubomír Rýgl/Documents/R/win-library/3.3")
library("xlsxjars", lib.loc="C:/Users/Lubomír Rýgl/Documents/R/win-library/3.3")
library(RODBC)
dbhandle <- odbcDriverConnect('driver={SQL Server};server=DESKTOP-3L4O8TU\SQLEXPRESS;database=TASKQUEUE;trusted_connection=true')
dbhandle <- odbcDriverConnect('driver={SQL Server};server=DESKTOP-3L4O8TU\\SQLEXPRESS;database=TASKQUEUE;trusted_connection=true')
result <- sqlQuery(dbOpenConnection, 'SELECT * FROM Users')
dbOpenConnection <- odbcDriverConnect('driver={SQL Server};server=DESKTOP-3L4O8TU\\SQLEXPRESS;database=TASKQUEUE;trusted_connection=true')
result <- sqlQuery(dbOpenConnection, 'SELECT * FROM Users')
print(result)
DataZamestnanci <- read.csv("Data/Employee_Data.csv")
print(DataZamestnanci)
DataZamestnanci <- read.csv("Data/Employee_Data.csv",header = TRUE)
print(DataZamestnanci)
DataZamestnanci <- read.csv("Data/Employee_Data.csv",header = TRUE, dec = ".")
print(DataZamestnanci)
DataZamestnanci <- read.csv("Data/Employee_Data.csv",header = TRUE,sep = "," dec = ".")
DataZamestnanci <- read.csv("Data/Employee_Data.csv",header = TRUE,sep = ",", dec = ".")
print(DataZamestnanci)
Print("Hello world!")
print("Hello world!")
library("rjson")
result <- fromJSON(file = "appsettings.Developement.json")
result <- fromJSON(file = "appsettings.Developement.json")
result <- fromJSON(file = "appsettings.Developement.json", collapse="")
result <- fromJSON(file = "appsettings.Developement.json",unexpected.escape = "")
result <- fromJSON(file = "appsettings.Developement.json")
set.seed(1)
3<4
2+2==5
T==TRUE
sum(1,3,5)
sqrt(24)
help(sqrt)
example(min)
getwd()
list.files()
getwd()
list.files()
source("002_ImportExport.R")
5:9
seq(5,9)
seq(5, 9, 0.01)
9:5
Ovoce[3]
Ovoce <- c("Pomeranč","Jablko","Meloun","Hruška","Liči","Banán")
Ovoce[3]
Ovoce <- c("Pomeranč","Jablko","Meloun","Hruška","Liči","Banán")
Ovoce[3]
Ovoce[3]<-"Pes"
Ovoce[3]
print(Ovoce)
Ovoce[c(1,4)]
Ovoce[2:4]
library(dslabs)
library(datasets)
data("murders")
data("USArrests")
str(murders)
murders <- data("USArrests")
str(murders)
class(murders)
murders <- data.frame("USArrests")
class(murders)
str(murders)
head(murders)
murders <- data("USArrests")
class(murders)
str(murders)
str(murders)
head(murders)
library(dslabs)
install.packages("dslabs")
murders <- data(USArrests)
class(murders)
str(murders)
head(murders)
murders <- data.frame(USArrests)
class(murders)
str(murders)
head(murders)
murders$UrbanPop
names(murders)
levels(murders)
levels(murders$1)
seq(1,10)
seq(1,10,0.1)
seq(1,10,0.01)
source("002_ImportExport.R")
class("Lorem ipsum")
ls
clear
x <- 1:5
y <- as.character(x)
y
y <- as.numeric(y)
x <- 1:5
y
y <- as.character(x)
y
y <- as.numeric(y)
y <- as.numeric(x)
y <- as.numeric(x)
y
x <- 1:5
y <- as.character(x)
y
y <- as.numeric(x)
y
as.numeric(y)
T==TRUE
nextVariable = 14.55
nextVariable
x <- c("1","b","3")
as.numeric(x)
Ovoce <- c("Pomeranč", "Jablko", "Meloun", "Hruška", "Liči", "Banán", "Jablko", "Jablko", "Pomeranč")
Cena <- c(12,30,50,12,13,15,55,55,12)
names(Cena) <- Ovoce
head Cena
head(Cena)
Ovoce <- c("Pomeranč", "Jablko", "Meloun", "Hruška", "Liči", "Banán", "Jablko", "Jablko", "Pomeranč")
Cena <- c(12,30,50,12,13,15,55,55,12)
Cenny <- names(Cena) <- Ovoce
Cenny
head(Cenny)
Cena[1:3]
Ovoce[1:3]
Cena[c("Jablko","Meloun")]
seq(1,10,length.out=100)
seq(1,1,length.out=100)
seq(1,2,length.out=100)
seq(1,99,length.out=100)
SeznamPolozek <- list(c(2,3,5,3,7,9),25.99,c("Poznámka_1","Poznámka_2"))
SeznamPolozek
murders <- data.frame(USArrests)
class(murders)
head(murders)
hodnoty <- c(31,45,55,12,1,22,35,48)
order(hodnoty)
getw()
getwd()
setwd("C:/Users/Lubomír Rýgl/Desktop/Mentors/R")
DataZamestnanci <- read.csv("Data/USA_Murders.csv", header = TRUE, sep = ",", dec = ".")
print(USMurdersData)
USMurdersData <- read.csv("Data/USA_Murders.csv", header = TRUE, sep = ",", dec = ".")
print(USMurdersData)
USMurdersData <- read.csv("Data/USA_Murders.csv", header = TRUE, sep = ";", dec = ".")
print(USMurdersData)
class(USMurdersData)
class(USMurdersData)
str(USMurdersData)
head(USMurdersData)
names(USMurdersData)
population <- USMurdersData$Population
population
sort(USMurdersData$Murders)
hodnoty <- c(15, 16, 17, 30, 5, 11, 8)
sort(c)
sort(hodnoty sort(hodnoty)
hodnoty <- c(15, 16, 17, 30, 5, 11, 8)
sort(hodnoty)
order(hodnoty)
USMurdersData$StateCode[MurdersIndex]
MurdersIndex <- order(USMurdersData$Murders)
USMurdersData$StateCode[MurdersIndex]
max(USMurdersData$Murders)
which.max(USMurdersData$Murders)
topState <- which.max(USMurdersData$Murders)
USMurdersData$State[topState]
USMurdersData$State(which.max(USMurdersData$Population))
USMurdersData$State[which.max(USMurdersData$Population)]
murder_rate <- USMurdersData$Murders/USMurdersData$Population
murder_rate <- USMurdersData$Murders/USMurdersData$Population*100000
USMurdersData$State[order(murder_rate,decreasing = TRUE)]
index <- murder_rate <0.71
index
index <- murder_rate <= 0.71
index
murder_rate <- USMurdersData$Murders / USMurdersData$Population * 100000
murder_rate
index <- murder_rate <= 7.1
index
index <- murder_rate <= 3.8
index
index <- murder_rate <= 1.8
index
USMurdersData$State[index]
sum(index)
12 + 13
26 >= 60
26 >= 26
26 >= 7
17 != 25
17 != 17
17 != 10
17 != "a"
26>="a"
12 ! 6
c1 <- c(TRUE, FALSE, TRUE, TRUE)
c2 <- c(FALSE, FALSE, TRUE, FALSE)
class(c2)
result <- c1!c2
c1 <- c(TRUE, FALSE, TRUE, TRUE)
c2 <- c(FALSE, FALSE, TRUE, FALSE)
head(USMurdersData)
USMurdersData <- read.csv("Data/USA_Murders.csv", header = TRUE, sep = ";", dec = ".")
setwd("C:/Users/Lubomír Rýgl/Desktop/Mentors/R")
USMurdersData <- read.csv("Data/USA_Murders.csv", header = TRUE, sep = ";", dec = ".")
index <- which(USMurdersData$State == "Massachusetts")
index
index <- match(c("New York", "Florida", "Texas"), USMurdersData$State)
index
murder_rate[index]
population <- USMurdersData$Population
population
MurdersIndex <- order(USMurdersData$Murders)
USMurdersData$StateCode[MurdersIndex]
max(USMurdersData$Murders)
topState <- which.max(USMurdersData$Murders)
USMurdersData$State[topState]
USMurdersData$State[which.max(USMurdersData$Population)]
murder_rate <- USMurdersData$Murders / USMurdersData$Population * 100000
murder_rate
USMurdersData$State[order(murder_rate,decreasing = TRUE)]
index <- murder_rate <= 1.8
index
USMurdersData$State[index]
sum(index)
index <- match(c("New York", "Florida", "Texas"), USMurdersData$State)
index
murder_rate[index]
c("Boston","Dakota","Washington") %in% USMurdersData$State
test %in% staty
staty <- USMurdersData$State
test <- c("Boston", "Dakota", "Washington")
test %in% staty
library(dplyr)
murders <- mutate(USMurdersData,rate=murders/population*100000)
head(USMurdersData)
murders <- mutate(USMurdersData,rate=Murders/Population*100000)
head(murders)
filter(USMurdersData,rate<=2.8)
filter(USMurdersData,rate<=3.8)
filter(murders,rate<=3.8)
filter(murders,rate<=2.8)
filter(murders,rate<=1.8)
filter(murders,rate<=1.5)
new_table <- select(murders,State,StateCode,rate)
filter(new_table,rate<=1.5)
murders %>% select(State,StateCode,rate) %>% filter(rate<=1.7)
}
x <- c(1, 2, -3, 4) if (all(x > 0)) {     print("All Positives") } else {     print("Not All Positives") }
produkty <- c("Kola", "Auto", "Letadlo")
ceny <- c(10, 50, 200)
names(produkty)<-ceny
produkty <- c("Kola", "Auto", "Letadlo")
ceny <- c(10, 50, 200)
names(ceny) <- produkty
ceny
ceny<-c("Kola"=10,"Auto"=50,"Letadlo"=200)
ceny
ceny <- c(kola = 10, auto = 50, letadlo = 200)
ceny
is.vector(ceny)
length(ceny)
class(ceny)
c(1, TRUE, "three")
class(coertion)
coertion <- c(1, TRUE, "three")
class(coertion)
příjmy-výdaje
příjmy <- c(200, 50, 66, 215, 519, 55)
výdaje <- c(50, 356, 32, 55, 698, 47)
příjmy-výdaje
příjmy+výdaje
sum(příjmy)
sum(výdaje)
profit <- příjmy-výdaje
výdaje/10
ceny <- c("Kola" = 10, "Auto" = 50, "Letadlo" = 200)
ceny[1]
ceny["Auto"]
ceny[c(1,3)]
ceny[c(-1)]
ceny[c(FALSE,TRUE,FALSE)]
ceny["Letadlo"]
ceny[c(1,3)]
c()
help(c)
## Vytvoříme nový vektor Ovoce, který bude obsahovat tyto prvky
Ovoce <- c("Pomeranč","Jablko","Meloun","Hruška","Liči","Banán")
print(Ovoce)
getwd()
